import { HtmlIndex_Element } from "../../index.html.element.js";
function int(a) {
    var txt = a.toString().split(".");
    if (txt.length == 1)
        return txt;
    if (txt[1].length < 3)
        return txt;
    return txt[0] + "." + txt[1].substring(0, 2);
}
export class ImageSlider {
    CanvasEl;
    ImageRefrence;
    ctx;
    Childern;
    IsMouseDown;
    HasMouse = false;
    constructor() {
        if (matchMedia('(pointer:fine)').matches) {
            this.HasMouse = true;
        }
        this.CanvasEl = document.createElement("canvas");
        document.body.appendChild(this.CanvasEl);
        this.ctx = this.CanvasEl.getContext("2d");
        this.ImageRefrence = [];
        var startImage = document.querySelector("img");
        this.ImageRefrence.push(startImage);
        this.AddImage(startImage.getAttribute("data-slide-image"));
        this.CanvasEl.addEventListener("mousedown", event => {
            this.IsMouseDown = true;
        });
        this.CanvasEl.addEventListener("mouseup", event => {
            this.IsMouseDown = false;
        });
        this.CanvasEl.addEventListener("mouseenter", event => {
            this.DrawControls();
        });
        this.CanvasEl.addEventListener("mouseout", event => {
            this.Draw();
        });
        this.CanvasEl.addEventListener("touchmove", event => {
            this.ColumnOffset = event.touches[0].clientX / this.CanvasEl.clientWidth;
            this.Draw(true);
        });
        this.CanvasEl.addEventListener("mousemove", event => {
            if (this.IsMouseDown) {
                this.ColumnOffset = event.clientX / this.CanvasEl.clientWidth;
                this.Draw(true);
                return;
            }
            this.ReportText = ["MOUSE", `[${event.clientX},${event.pageX},${event.offsetX}]`, "#cfcfcf"];
            if (this.InChangeArea(event.clientX)) {
                this.CanvasEl.style.cursor = "col-resize";
            }
            else {
                this.CanvasEl.style.cursor = "";
            }
        });
        this.Childern = new HtmlIndex_Element();
        window.addEventListener("resize", _ => this.Draw());
    }
    ColumnOffset = 0.5;
    InChangeArea(r) {
        var b0 = this.CanvasEl.clientWidth * this.ColumnOffset;
        if (r < b0 + 10 && r > b0 - 10)
            return true;
        return false;
    }
    AddImage(src01) {
        var img = new Image();
        img.onload = _ => {
            this.ImageRefrence.push(img);
            this.Draw();
        };
        img.src = src01;
    }
    Draw(ForceControl = false) {
        // >> Initialize
        this.Childern.Report.innerHTML = "";
        this.CanvasEl.width = this.ImageRefrence[0].clientWidth;
        this.CanvasEl.height = this.ImageRefrence[0].clientHeight;
        this.UpdateSlide(0);
        this.UpdateSlide(1);
        if (!this.HasMouse || ForceControl)
            this.DrawControls();
    }
    DrawControls() {
        this.ctx.beginPath();
        var b0 = this.CanvasEl.width * this.ColumnOffset;
        this.ctx.moveTo(b0, 0);
        this.ctx.lineTo(b0, this.CanvasEl.height / 2 - 50);
        this.ctx.moveTo(b0, this.CanvasEl.height / 2 + 50);
        this.ctx.lineTo(b0, this.CanvasEl.height);
        this.ctx.strokeStyle = "#1976d2cc";
        this.ctx.lineWidth = 4;
        this.ctx.setLineDash([15, 5]);
        this.ctx.stroke();
        this.ctx.fillStyle = "#1976d2cc";
        this.ctx.beginPath();
        this.ctx.ellipse(b0, this.CanvasEl.height / 2, 50, 50, 0, 0, 2 * Math.PI);
        this.ctx.stroke();
        this.ctx.fill();
    }
    UpdateSlide(nt) {
        var at = {
            x: 0,
            y: 0,
            w: this.CanvasEl.width * this.ColumnOffset,
            h: this.CanvasEl.height
        };
        var img = this.ImageRefrence[nt];
        var SourceWidth = img.naturalWidth;
        var CanvasWidth = this.CanvasEl.width;
        var SourceHeight = img.naturalHeight;
        var CanvasHeight = this.CanvasEl.height;
        // ## CROP
        var wdeff = SourceWidth / CanvasWidth;
        var hdeff = SourceHeight / CanvasHeight;
        var s = {
            x: wdeff / 2,
            y: hdeff / 2,
            w: this.CanvasEl.width * this.ColumnOffset,
            h: this.CanvasEl.height
        };
        var widthisBetter = wdeff < hdeff;
        if (widthisBetter) {
            s.x = 0;
            s.w = SourceWidth * this.ColumnOffset;
            s.h = CanvasHeight * SourceWidth / CanvasWidth;
            s.y = (SourceHeight - s.h) / 2;
            if (nt == 1) {
                s.x = s.w;
                s.w = SourceWidth - s.x;
                at.x += at.w;
                at.w = CanvasWidth - at.x;
            }
        }
        else {
            const WCrop = {
                Width: 0,
                Start: { x: 0, w: 0 },
                Next: { x: 0, w: 0 },
            };
            WCrop.Width = (CanvasWidth * SourceHeight / CanvasHeight);
            WCrop.Start.x = (SourceWidth - WCrop.Width) / 2;
            WCrop.Start.w = WCrop.Width * this.ColumnOffset;
            WCrop.Next.x = WCrop.Start.x + WCrop.Start.w;
            WCrop.Next.w = WCrop.Width - WCrop.Width * this.ColumnOffset;
            s.y = 0;
            s.h = SourceHeight;
            s.x = nt == 0 ? WCrop.Start.x : WCrop.Next.x;
            s.w = nt == 0 ? WCrop.Start.w : WCrop.Next.w;
            if (nt == 1) {
                at.x += at.w;
                at.w = CanvasWidth - at.x;
            }
        }
        this.DrawImage(img, s, at);
    }
    AddReport(arg0, arg1, color = "#cccccc") {
        var pre = document.createElement("code");
        pre.style.color = color;
        pre.textContent += arg0 + ": " + arg1 + "\n";
        this.Childern.Report.append(pre);
    }
    set ReportText(v) {
        this.Childern.Report.innerHTML = "";
        var pre = document.createElement("code");
        pre.style.color = v[2];
        pre.textContent += v[0] + ": " + v[1] + "\n";
        this.Childern.Report.append(pre);
    }
    DrawImage(image, s, at) {
        this.ctx.drawImage(image, s.x, s.y, s.w, s.h, at.x, at.y, at.w, at.h);
    }
}
//# sourceMappingURL=data:application/json;base64,